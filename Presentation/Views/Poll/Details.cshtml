@model Domain.Models.Poll

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Poll</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Option1Text)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Option1Text)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Option2Text)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Option2Text)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Option3Text)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Option3Text)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Option1VotesCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Option1VotesCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Option2VotesCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Option2VotesCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Option3VotesCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Option3VotesCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
    </dl>
</div>

<div>
    <h4>Poll Results (Graphical View)</h4>
    <canvas id="pollChart" width="400" height="200"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('pollChart').getContext('2d');
    const pollChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['@Model.Option1Text', '@Model.Option2Text', '@Model.Option3Text'],
            datasets: [{
                label: 'Votes',
                data: [@Model.Option1VotesCount, @Model.Option2VotesCount, @Model.Option3VotesCount],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    precision: 0
                }
            }
        }
    });
</script>

<div>
    <form asp-action="Vote" method="post">
        <input type="hidden" name="id" value="@Model.Id" />

        <div class="form-group">
            <label>Vote for your preferred option:</label><br />

            <button type="submit" name="selectedOption" value="Option1" class="btn btn-primary mb-2">
                @Model.Option1Text
            </button><br />

            <button type="submit" name="selectedOption" value="Option2" class="btn btn-primary mb-2">
                @Model.Option2Text
            </button><br />

            <button type="submit" name="selectedOption" value="Option3" class="btn btn-primary mb-2">
                @Model.Option3Text
            </button>
        </div>
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
